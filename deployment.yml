spipeline:
  agent: any

  stages:
    - stage: 'Generate Deployment YAML'
      steps:
        script:
          def deploymentYamlContent = """
          apiVersion: apps/v2
          kind: Deployment
          metadata:
            name: poojaimages
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: poojaimages
            template:
              metadata:
                labels:
                  app: poojaimages
              spec:
                containers:
                  - name: course-services
                    image: ${NEXUS_DOCKER_REPO}/Poojaimages:1.0.2
                    ports:
                      - containerPort: 8086
          """
          writeFile file: 'k0s-deployment.yaml', text: deploymentYamlContent

  post:
    success:
      steps:
        - archiveArtifacts artifacts: 'k0s-deployment.yaml', onlyIfSuccessful: true
        - archiveArtifacts artifacts: 'service-deployment.yaml', allowEmptyArchive: true
